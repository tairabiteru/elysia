"""
Django settings for f project.

Generated by 'django-admin startproject' using Django 4.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

import os
import sys
from pathlib import Path
sys.path.append(str(Path(__file__).resolve().parent.parent.parent.parent))

from elysia.core.conf import Config

conf = Config.load()


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = conf.root_dir


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = conf.mvc.secret_key

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = conf.mvc.debug_mode

ALLOWED_HOSTS = conf.mvc.allowed_hosts

CSRF_TRUSTED_ORIGINS = list([f"https://{host}" for host in conf.mvc.allowed_hosts])

DATA_UPLOAD_MAX_NUMBER_FIELDS = 30000


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "elysia.mvc.discord",
    "elysia.mvc.chores",
    "elysia.mvc.threats"
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "elysia.mvc.discord.middleware.BotInjectorMiddleware"
]

SESSION_ENGINE  = "django.contrib.sessions.backends.file"
SESSION_FILE_PATH = conf.temp

ROOT_URLCONF = "elysia.mvc.core.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(conf.root_dir, "elysia/mvc/core/templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "elysia.mvc.core.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": conf.mvc.database.path
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = str(conf.timezone)

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = "static/"
STATIC_ROOT = conf.mvc.static_root

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

MEDIA_URL = '/uploads/'
MEDIA_ROOT = conf.mvc.upload_root


def configure():
    import django
    from django.conf import settings
    import copy

    vars = globals()
    temp = copy.copy(vars)
    for key in temp.keys():
        if any([char in 'abcdefghijklmnopqrstuvwxyz' for char in key]):
            vars.pop(key)

    settings.configure(**vars)
    django.setup()